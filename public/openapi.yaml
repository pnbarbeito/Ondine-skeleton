openapi: 3.0.0
info:
  title: Ondine API
  version: "1.0"
  description: Minimal API for Ondine (login, users, profiles)
servers:
  - url: /api

paths:
  /login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Token and refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized

  /me:
    get:
      summary: Get current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized

  /users:
    get:
      summary: List users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
    post:
      summary: Create user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request

  /users/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: Get user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
    put:
      summary: Update user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
    delete:
      summary: Delete user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK

  /profiles:
    get:
      summary: List profiles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
    post:
      summary: Create profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Bad Request

  /profiles/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: Get profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
    put:
      summary: Update profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCreate'
      responses:
        '200':
          description: OK
    delete:
      summary: Delete profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        refresh_token:
          type: string

    RefreshRequest:
      type: object
      required: [refresh_token]
      properties:
        refresh_token:
          type: string

    RefreshResponse:
      type: object
      properties:
        token:
          type: string

    ProfileCreate:
      type: object
      required: [name]
      properties:
        name:
          type: string
        permissions:
          type: object
          additionalProperties:
            type: integer

    ProfileResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        permissions:
          type: object
          additionalProperties:
            type: integer
